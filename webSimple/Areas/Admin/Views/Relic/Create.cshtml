@model webSimple.Models.Relic

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<link href="~/Scripts/Uploadify/uploadify.css" rel="stylesheet" />
<script src="~/Scripts/Uploadify/jquery.uploadify.min.js"></script>
<script src="~/Scripts/Tinymce/tinymce.min.js"></script>

<script>

    tinymce.init({
        selector: '#Content',
        images_upload_url: 'postAcceptor.php',
        images_upload_base_path: '~/Uploads/',
        plugins: 'image code',
        toolbar: 'undo redo | link image | code',
        /* enable title field in the Image dialog*/
        image_title: true,
        /* enable automatic uploads of images represented by blob or data URIs*/
        automatic_uploads: true,
        /*
          URL of our upload handler (for more details check: https://www.tiny.cloud/docs/configure/file-image-upload/#images_upload_url)
          images_upload_url: 'postAcceptor.php',
          here we add custom filepicker only to Image dialog
        */
        file_picker_types: 'image',
        /* and here's our custom image picker*/
        file_picker_callback: function (cb, value, meta) {
            var input = document.createElement('input');
            input.setAttribute('type', 'file');
            input.setAttribute('accept', 'image/*');

            /*
              Note: In modern browsers input[type="file"] is functional without
              even adding it to the DOM, but that might not be the case in some older
              or quirky browsers like IE, so you might want to add it to the DOM
              just in case, and visually hide it. And do not forget do remove it
              once you do not need it anymore.
            */

            input.onchange = function () {
                var file = this.files[0];

                var reader = new FileReader();
                reader.onload = function () {
                    /*
                      Note: Now we need to register the blob in TinyMCEs image blob
                      registry. In the next release this part hopefully won't be
                      necessary, as we are looking to handle it internally.
                    */
                    var id = 'blobid' + (new Date()).getTime();
                    var blobCache = tinymce.activeEditor.editorUpload.blobCache;
                    var base64 = reader.result.split(',')[1];
                    var blobInfo = blobCache.create(id, file, base64);
                    blobCache.add(blobInfo);

                    /* call the callback and populate the Title field with the file name */
                    cb(blobInfo.blobUri(), { title: file.name });
                };
                reader.readAsDataURL(file);
            };

            input.click();
        },
        content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'
    });


</script>


@*<script type="text/javascript">
        $(function () {

            $('#file_upload').uploadify({

                'swf': '/Scripts/Uploadify/uploadify.swf',
                'uploader': "@Url.Action("Upload", "News")",
                'cancelImg': "@Url.Content("/Scripts/Uploadify/uploadify-cancel.png")",
                'fileSizeLimit': '1MB', // Add Kb, MB, GB
                'buttonText': 'Insert Images...', //Text for button
                'queueSizeLimit': 10, // Max number of files allowed
                'fileTypeDesc': 'Image Files',
              'fileTypeExts': '*.gif; *.jpg; *.png', // File type allowed
                'onUploadSuccess' : function(file, data, response) {
                 tinyMCE.activeEditor.execCommand("mceInsertContent", true, "<img src='" + data + "' alt='Uploaded Image' class='img-responsive' />");
                }

            })

        }
);
</script>*@
<main>
    <div class="container-fluid">
        <h1 class="mt-4">Di tích</h1>
        <ol class="breadcrumb mb-4">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Trang chủ</a></li>
            <li class="breadcrumb-item active"><a href="@Url.Action("Index", "Relic")">Di tích</a></li>
            <li class="breadcrumb-item active">Thêm Di tích</li>
        </ol>
        <div class="card mb-4">

            <div class="card-body">

                @using (Html.BeginForm("Create", "Relic", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="container_relic">
                        <div class="header_relic">

                            <img id="Image" class="cover_img_relic overlay" style="background-size:cover; object-fit:cover;" alt="cover image" src="~/Assets/img/Relics/tempt.jpg" />
                            <div class="content_header_relic">
                                <div class="name_relic">
                                    @Html.EditorFor(model => model.RelicName, new { htmlAttributes = new { @class = "_name-relic", @placeholder = "Tên di tích..." } })
                                </div>
                                <div class="title_relic">
                                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "_title-relic", @placeholder = "Tiêu đề..." } })

                                </div>

                                <div class="cover_image_relic">
                                    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
                                    <label for="img">Ảnh bìa</label>
                                    <input type="file" name="img" id="img" placeholder="Ảnh bìa" />
                                    <script>
                                        function readURL(input) {
                                            if (input.files && input.files[0]) {
                                                var reader = new FileReader();

                                                reader.onload = function (e) {
                                                    $('#Image').attr('src', e.target.result);
                                                }

                                                reader.readAsDataURL(input.files[0]);
                                            }
                                        }

                                        $("#img").change(function () {
                                            readURL(this);
                                        });
                                    </script>
                                </div>
                            </div>

                        </div>
                      
                        <div class="content_relic" style="padding: 3rem; box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px, rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px, rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;">
                            <label style="margin: 3rem 0 0 0">Giới thiệu</label>
                            @Html.TextBoxFor(model => model.Summary, new { @type = "text", @cols = "40", @rows = "5", @style = "width:100%; height:100px;padding: 3rem;" })

                            <label style="margin: 3rem 0 0 0">Nội dung</label>

                            @Html.TextAreaFor(model => model.Content, new { htmlAttributes = new { @class = "_title-relic", @placeholder = "Tiêu đề..." } })
                        </div>
                    </div>
                    <div class="form-group">
                        <div style="padding: 4rem 22rem; display:grid; grid-template-columns: auto auto">
                            <input type="submit" value="Lưu" class="btn btn-success" />
                            <a href="@Url.Action("Index", "Relic")" class="btn btn-danger">Hủy</a>

                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</main>